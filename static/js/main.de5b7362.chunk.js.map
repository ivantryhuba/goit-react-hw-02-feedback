{"version":3,"sources":["components/Container/Container.styles.js","components/Container/Container.js","components/FeedbackBtn/FeedbackBtn.styles.js","components/FeedbackBtn/FeedbackBtn.js","components/Notification/Notification.styles.js","components/Notification/Notification.js","components/Section/Section.styles.js","components/Section/Section.js","components/Statistics/Statistics.styles.js","components/Statistics/Statistics.js","App.styles.js","App.js","index.js"],"names":["ContainerStyled","styled","div","Container","children","ButtonList","ul","ButtonItem","li","ButtonElem","button","FeedbackBtn","options","onLeaveFeedback","map","option","type","onClick","NotificationStyled","p","Notification","text","H2Styled","h2","Section","title","defaultProps","StatisticsList","Statistics","good","neutral","bad","total","positivePercentage","H1Styled","h1","App","state","increment","event","setState","prevState","value","target","textContent","toLowerCase","totalCountFeedback","toFixed","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8RAEaA,EAAkBC,IAAOC,IAAV,oR,OCGfC,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,OAAO,cAACJ,EAAD,UAAkBI,KCJdC,EAAaJ,IAAOK,GAAV,kKAUVC,EAAaN,IAAOO,GAAV,2LAUVC,EAAaR,IAAOS,OAAV,kXCjBVC,EAAc,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBACrC,OACE,cAACR,EAAD,UACGO,EAAQE,KAAI,SAACC,GAAD,OACX,cAACR,EAAD,UACE,cAACE,EAAD,CAAYO,KAAK,SAASC,QAASJ,EAAnC,SACGE,KAFYA,SCPZG,EAAqBjB,IAAOkB,EAAV,gJCElBC,EAAe,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC7B,OAAO,cAACH,EAAD,UAAqBG,KCHjBC,EAAWrB,IAAOsB,GAAV,yJCGRC,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOrB,EAAe,EAAfA,SAC/B,OACE,oCACE,cAACkB,EAAD,UAAWG,IACX,mCAAGrB,QAKToB,EAAQE,aAAe,CACrBtB,SAAU,ICbL,I,EAAMuB,EAAiB1B,IAAOK,GAAV,mJCGdsB,GDMiB3B,IAAOO,GAAV,kICND,SAAC,GAMpB,IALLqB,EAKI,EALJA,KACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,IACAC,EAEI,EAFJA,MACAC,EACI,EADJA,mBAEA,OACE,eAACN,EAAD,WACE,wCAAWE,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,EAAxB,YChBOC,EAAWjC,IAAOkC,GAAV,yJC+DNC,E,4MAtDbC,MAAQ,CAAER,KAAM,EAAGC,QAAS,EAAGC,IAAK,G,EAEpCO,UAAY,SAACC,GACX,EAAKC,UAAS,SAACC,GACb,IACMC,EADaH,EAAXI,OACaC,YAAYC,cACjC,OAAO,eACJH,EAAQD,EAAUC,GAAS,O,EAKlCI,mBAAqB,SAACjB,EAAMC,EAASC,GACnC,OAAOF,EAAOC,EAAUC,G,EAG1BE,mBAAqB,SAACJ,EAAMC,EAASC,GAGnC,OADmBF,GADPA,EAAOC,EAAUC,GACM,KAAKgB,QAAQ,I,4CAIlD,WACE,IAAQT,EAAsDU,KAAtDV,UAAWQ,EAA2CE,KAA3CF,mBAAoBb,EAAuBe,KAAvBf,mBACvC,EAA+Be,KAAKX,MAA5BR,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAEvB,OACE,eAAC,EAAD,WACE,cAACG,EAAD,+BACA,cAAC,EAAD,CAAST,MAAO,6BAAhB,SACE,cAAC,EAAD,CACEb,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiByB,MAIrB,cAAC,EAAD,CAASb,MAAO,aAAhB,SACGqB,EAAmBjB,EAAMC,EAASC,GAAO,EACxC,cAAC,EAAD,CAAcV,KAAM,sBAEpB,cAAC,EAAD,CACEQ,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOc,EAAmBjB,EAAMC,EAASC,GACzCE,mBAAoBA,EAAmBJ,EAAMC,EAASC,c,GA9ClDkB,IAAMC,WCJxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.de5b7362.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const ContainerStyled = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 15px;\n  margin-bottom: 15px;\n\n  width: 500px;\n  padding: 10px;\n\n  border: 2px solid red;\n  border-radius: 20px;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { ContainerStyled } from \"./Container.styles\";\n\nexport const Container = ({ children }) => {\n  return <ContainerStyled>{children}</ContainerStyled>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n","import styled from \"@emotion/styled\";\n\nexport const ButtonList = styled.ul`\n  width: 100%;\n  margin-top: 0;\n  margin-bottom: 10px;\n  padding: 15px;\n  font-size: 40px;\n  font-weight: 700;\n  color: black;\n`;\n\nexport const ButtonItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 10px;\n  font-size: 16px;\n  font-weight: 500;\n  color: black;\n`;\n\nexport const ButtonElem = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 150px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 15px;\n  font-size: 15px;\n  font-weight: 700;\n  background-color: yellow;\n  border: 2px solid green;\n  border-radius: 20px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: azure;\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { ButtonList, ButtonItem, ButtonElem } from \"./FeedbackBtn.styles\";\n\nexport const FeedbackBtn = ({ options, onLeaveFeedback }) => {\n  return (\n    <ButtonList>\n      {options.map((option) => (\n        <ButtonItem key={option}>\n          <ButtonElem type=\"button\" onClick={onLeaveFeedback}>\n            {option}\n          </ButtonElem>\n        </ButtonItem>\n      ))}\n    </ButtonList>\n  );\n};\n\nFeedbackBtn.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const NotificationStyled = styled.p`\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 10px;\n  font-size: 20px;\n  font-weight: 500;\n  color: orange;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { NotificationStyled } from \"./Notification.styles\";\n\nexport const Notification = ({ text }) => {\n  return <NotificationStyled>{text}</NotificationStyled>;\n};\n\nNotification.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const H2Styled = styled.h2`\n  text-align: center;\n  margin-top: 0px;\n  margin-bottom: 10px;\n  font-size: 30px;\n  font-weight: 700;\n  color: black;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { H2Styled } from \"./Section.styles\";\n\nexport const Section = ({ title, children }) => {\n  return (\n    <section>\n      <H2Styled>{title}</H2Styled>\n      <>{children}</>\n    </section>\n  );\n};\n\nSection.defaultProps = {\n  children: \"\",\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n","import styled from \"@emotion/styled\";\n\nexport const StatisticsList = styled.ul`\n  margin-top: 0px;\n  margin-bottom: 10px;\n  padding: 0px;\n  font-size: 20px;\n  font-weight: 500;\n  color: black;\n`;\n\nexport const StatisticsItem = styled.li`\n  margin-top: 0px;\n  margin-bottom: 10px;\n  font-size: 20px;\n  font-weight: 500;\n  color: black;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { StatisticsList } from \"./Statistics.styles\";\n\nexport const Statistics = ({\n  good,\n  neutral,\n  bad,\n  total,\n  positivePercentage,\n}) => {\n  return (\n    <StatisticsList>\n      <li>Good: {good}</li>\n      <li>Neutral: {neutral}</li>\n      <li>Bad: {bad}</li>\n      <li>Total: {total}</li>\n      <li>Positive feedback: {positivePercentage}%</li>\n    </StatisticsList>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.string.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const H1Styled = styled.h1`\n  text-align: center;\n  margin-top: 0px;\n  margin-bottom: 20px;\n  font-size: 40px;\n  font-weight: 700;\n  color: black;\n`;\n","import React from \"react\";\n\nimport { Container } from \"./components/Container/Container\";\nimport { FeedbackBtn } from \"./components/FeedbackBtn/FeedbackBtn\";\nimport { Notification } from \"./components/Notification/Notification\";\nimport { Section } from \"./components/Section/Section\";\nimport { Statistics } from \"./components/Statistics/Statistics\";\n\nimport { H1Styled } from \"./App.styles\";\n\nclass App extends React.Component {\n  state = { good: 0, neutral: 0, bad: 0 };\n\n  increment = (event) => {\n    this.setState((prevState) => {\n      const { target } = event;\n      const value = target.textContent.toLowerCase();\n      return {\n        [value]: prevState[value] + 1,\n      };\n    });\n  };\n\n  totalCountFeedback = (good, neutral, bad) => {\n    return good + neutral + bad;\n  };\n\n  positivePercentage = (good, neutral, bad) => {\n    let total = good + neutral + bad;\n    let percentage = ((good / total) * 100).toFixed(0);\n    return percentage;\n  };\n\n  render() {\n    const { increment, totalCountFeedback, positivePercentage } = this;\n    const { good, neutral, bad } = this.state;\n\n    return (\n      <Container>\n        <H1Styled>Feedback Service</H1Styled>\n        <Section title={\"Please leave your feedback\"}>\n          <FeedbackBtn\n            options={[\"good\", \"neutral\", \"bad\"]}\n            onLeaveFeedback={increment}\n          />\n        </Section>\n\n        <Section title={\"Statistics\"}>\n          {totalCountFeedback(good, neutral, bad) < 1 ? (\n            <Notification text={\"No feedback given\"} />\n          ) : (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={totalCountFeedback(good, neutral, bad)}\n              positivePercentage={positivePercentage(good, neutral, bad)}\n            />\n          )}\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"modern-normalize/modern-normalize.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}