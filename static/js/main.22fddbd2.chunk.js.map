{"version":3,"sources":["components/Container/Container.styles.js","components/Container/Container.js","components/FeedbackBtn/FeedbackBtn.styles.js","components/FeedbackBtn/FeedbackBtn.js","components/Notification/Notification.styles.js","components/Notification/Notification.js","components/Section/Section.styles.js","components/Section/Section.js","components/StatisticList/StatisticList.styles.js","components/StatisticItem/StatisticItem.styles.js","components/StatisticItem/StatisticItem.js","components/StatisticList/StatisticList.js","App.styles.js","App.js","index.js"],"names":["ContainerStyled","styled","div","Container","children","ButtonList","ul","ButtonItem","li","ButtonElem","button","FeedbackBtn","options","onLeaveFeedback","map","option","type","onClick","NotificationStyled","p","Notification","text","H2Styled","h2","Section","title","defaultProps","StatisticListStyled","StatisticItemStyled","StatisticLabel","span","StatisticItem","label","value","StatisticList","stateObj","total","positivePercentage","Object","keys","stateProp","H1Styled","h1","App","state","good","props","neutral","bad","increment","event","setState","prevState","target","textContent","toLowerCase","totalCountFeedback","percentage","toFixed","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.22fddbd2.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const ContainerStyled = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 15px;\n  margin-bottom: 15px;\n\n  width: 500px;\n  padding: 10px;\n\n  border: 2px solid red;\n  border-radius: 20px;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { ContainerStyled } from \"./Container.styles\";\n\nexport const Container = ({ children }) => {\n  return <ContainerStyled>{children}</ContainerStyled>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n","import styled from '@emotion/styled';\n\nexport const ButtonList = styled.ul`\n    width: 100%;\n    margin-top: 0;\n    margin-bottom: 10px;\n    padding: 15px;\n    font-size: 40px;\n    font-weight: 700;\n    color: black;\n`;\n\nexport const ButtonItem = styled.li`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    margin-bottom: 10px;\n    color: black;\n`;\n\nexport const ButtonElem = styled.button`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 150px;\n    margin-left: auto;\n    margin-right: auto;\n    padding: 15px;\n    font-size: 15px;\n    font-weight: 700;\n    text-transform: capitalize;\n    background-color: yellow;\n    border: 2px solid green;\n    border-radius: 20px;\n    cursor: pointer;\n\n    &:hover {\n        background-color: azure;\n    }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { ButtonList, ButtonItem, ButtonElem } from \"./FeedbackBtn.styles\";\n\nexport const FeedbackBtn = ({ options, onLeaveFeedback }) => {\n  return (\n    <ButtonList>\n      {options.map((option) => (\n        <ButtonItem key={option}>\n          <ButtonElem type=\"button\" onClick={onLeaveFeedback}>\n            {option}\n          </ButtonElem>\n        </ButtonItem>\n      ))}\n    </ButtonList>\n  );\n};\n\nFeedbackBtn.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const NotificationStyled = styled.p`\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 10px;\n  font-size: 20px;\n  font-weight: 500;\n  color: orange;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { NotificationStyled } from \"./Notification.styles\";\n\nexport const Notification = ({ text }) => {\n  return <NotificationStyled>{text}</NotificationStyled>;\n};\n\nNotification.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const H2Styled = styled.h2`\n  text-align: center;\n  margin-top: 0px;\n  margin-bottom: 10px;\n  font-size: 30px;\n  font-weight: 700;\n  color: black;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { H2Styled } from \"./Section.styles\";\n\nexport const Section = ({ title, children }) => {\n  return (\n    <section>\n      <H2Styled>{title}</H2Styled>\n      <>{children}</>\n    </section>\n  );\n};\n\nSection.defaultProps = {\n  children: \"\",\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n","import styled from '@emotion/styled';\n\nexport const StatisticListStyled = styled.ul`\n    margin-top: 0px;\n    margin-bottom: 10px;\n    padding: 0px;\n    font-size: 20px;\n    font-weight: 500;\n    color: black;\n`;\n","import styled from '@emotion/styled';\n\nexport const StatisticItemStyled = styled.li`\n    margin-top: 0px;\n    margin-bottom: 10px;\n    font-size: 20px;\n    font-weight: 500;\n    color: black;\n`;\n\nexport const StatisticLabel = styled.span`\n    text-transform: capitalize;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { StatisticItemStyled, StatisticLabel } from './StatisticItem.styles';\n\nexport const StatisticItem = ({ label, value }) => {\n    return (\n        <StatisticItemStyled>\n            <StatisticLabel>{label}</StatisticLabel> : {value}\n        </StatisticItemStyled>\n    );\n};\n\nStatisticItem.propTypes = {\n    label: PropTypes.string.isRequired,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { StatisticListStyled } from './StatisticList.styles';\nimport { StatisticItem } from '../StatisticItem/StatisticItem';\n\nexport const StatisticList = ({ stateObj, total, positivePercentage }) => {\n    return (\n        <StatisticListStyled>\n            {Object.keys(stateObj).map(stateProp => (\n                <StatisticItem\n                    key={stateProp}\n                    label={stateProp}\n                    value={stateObj[`${stateProp}`]}\n                />\n            ))}\n\n            <StatisticItem key=\"total\" label=\"total\" value={total} />\n\n            <StatisticItem\n                key=\"positivePercentage\"\n                label=\"positive feedback\"\n                value={positivePercentage}\n            />\n        </StatisticListStyled>\n    );\n};\n\nStatisticList.propTypes = {\n    stateObj: PropTypes.object.isRequired,\n    total: PropTypes.number.isRequired,\n    positivePercentage: PropTypes.string.isRequired,\n};\n\n// good,\n// neutral,\n// bad,\n// total,\n// positivePercentage,\n","import styled from \"@emotion/styled\";\n\nexport const H1Styled = styled.h1`\n  text-align: center;\n  margin-top: 0px;\n  margin-bottom: 20px;\n  font-size: 40px;\n  font-weight: 700;\n  color: black;\n`;\n","import React from 'react';\n\nimport { Container } from './components/Container/Container';\nimport { FeedbackBtn } from './components/FeedbackBtn/FeedbackBtn';\nimport { Notification } from './components/Notification/Notification';\nimport { Section } from './components/Section/Section';\nimport { StatisticList } from './components/StatisticList/StatisticList';\n\nimport { H1Styled } from './App.styles';\n\nclass App extends React.Component {\n    static defaultProps = {\n        good: 0,\n        neutral: 0,\n        bad: 0,\n    };\n\n    state = {\n        good: this.props.good,\n        neutral: this.props.neutral,\n        bad: this.props.bad,\n    };\n\n    increment = event => {\n        this.setState(prevState => {\n            const { target } = event;\n            const value = target.textContent.toLowerCase();\n            return {\n                [value]: prevState[value] + 1,\n            };\n        });\n    };\n\n    totalCountFeedback = (good, neutral, bad) => {\n        return good + neutral + bad;\n    };\n\n    positivePercentage = (good, neutral, bad) => {\n        let total = good + neutral + bad;\n        let percentage = ((good / total) * 100).toFixed(0);\n        return `${percentage}%`;\n    };\n\n    render() {\n        const { increment, totalCountFeedback, positivePercentage } = this;\n        const { good, neutral, bad } = this.state;\n\n        return (\n            <Container>\n                <H1Styled>Feedback Service</H1Styled>\n                <Section title={'Please leave your feedback'}>\n                    <FeedbackBtn\n                        options={['good', 'neutral', 'bad']}\n                        onLeaveFeedback={increment}\n                    />\n                </Section>\n\n                <Section title={'Statistics'}>\n                    {totalCountFeedback(good, neutral, bad) < 1 ? (\n                        <Notification text={'No feedback given'} />\n                    ) : (\n                        <StatisticList\n                            stateObj={this.state}\n                            total={totalCountFeedback(good, neutral, bad)}\n                            positivePercentage={positivePercentage(\n                                good,\n                                neutral,\n                                bad,\n                            )}\n                        />\n                    )}\n                </Section>\n            </Container>\n        );\n    }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"modern-normalize/modern-normalize.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}